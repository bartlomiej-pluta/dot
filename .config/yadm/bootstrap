#!/usr/bin/bash

set -euo pipefail
IFS=$'\n\t'

readonly logfile="/tmp/$(basename "$0").log"
info()    { echo "[INFO]    $*" | tee -a "$logfile" >&2 ; }
warning() { echo "[WARNING] $*" | tee -a "$logfile" >&2 ; }
error()   { echo "[ERROR]   $*" | tee -a "$logfile" >&2 ; }
fatal()   { echo "[FATAL]   $*" | tee -a "$logfile" >&2 ; exit 1 ; }

todo()    { echo "- [ ] $*" >> "$HOME/todo.$(date +%s).md" ; }

lockfile="/tmp/yadm-bootstrap.lock"
resources="$HOME/.config/yadm/bootstrap-resources"

cleanup() {
  rm -f "$lockfile"
	exit
}

init_submodules() (
  # Because Git submodule commands cannot operate without a work tree, they must
  # be run from within $HOME (assuming this is the root of your dotfiles)
  cd "$HOME"
  info "Init submodules"
  yadm submodule update --recursive --init
)

install_packages() {
  info "Install packages"

  # Manjaro
  if uname -r | grep -i manjaro >/dev/null 2>&1 ; then
      manjaro_packages
  fi

  # Microsoft WSL
  if uname -r | grep -iE "microsoft(.*)wsl" >/dev/null 2>&1 ; then
    wsl_ubuntu_packages
  fi
}

manjaro_packages() {  
  yay -S --needed - < "$resources/packages.manjaro"
  info "Install Python modules"
  pip install --user pywal ipython sympy pandas
}

wsl_ubuntu_packages() {  
  sudo apt update -y
  sudo apt upgrade -y
  xargs sudo apt install -y < "$resources/packages.wsl"
  info "Updating CA certificates"
  sudo update-ca-certificates
}

install_java_sdk_manager() {
  if ! command -v sdk ; then
    info "Install SDK Manager"
    curl -s "https://get.sdkman.io" | bash
    todo "Install Java (sdk list java)"
  fi || true
}

display_info() {
  # Manjaro
  if uname -r | grep -i manjaro >/dev/null 2>&1 ; then
     info Done
  fi

  # Microsoft WSL
  if uname -r | grep -iE "microsoft(.*)wsl" >/dev/null 2>&1 ; then
     info Done
     todo 'WSL detected - please use YADM "wsl" to have proper configuration files'
     todo 'Please also install Gpg4win in order to have access to the GUI pinentry program (refer to ~/.gnupg/gpg-agent.conf).'
   fi
}


# Main script
if { set -C; 2>/dev/null >"$lockfile"; }; then
  trap cleanup EXIT  
  init_submodules
  install_packages
  install_java_sdk_manager  
  display_info
else
  fatal "Lock file '"$lockfile"' exists... Exiting"
fi
