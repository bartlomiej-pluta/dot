#!/usr/bin/env bash

#/ Usage: notes COMMAND [options]
#/ Simple notes manager 
#/
#/ Commands:
#/   s, sync: Pulls notes from origin and pushes local ones (see 'Sync options' for available options)
#/
#/ General options:
#/   -h: Display this help message
#/
#/ Sync options:
#/   -m: Overrides the default commit message with custom one

set -euo pipefail
IFS=$'\n\t'

readonly dir="$HOME/Notes"

usage() { grep '^#/' "$0" | cut -c4- ; exit 0 ; }
expr "$*" : ".*--help" > /dev/null && usage

readonly LOG_FILE="/tmp/$(basename "$0").log"
info()    { echo "[INFO]    $*" | tee -a "$LOG_FILE" >&2 ; }
warning() { echo "[WARNING] $*" | tee -a "$LOG_FILE" >&2 ; }
error()   { echo "[ERROR]   $*" | tee -a "$LOG_FILE" >&2 ; }
fatal()   { echo "[FATAL]   $*" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }

cleanup() {
  # Remove temporary files
  # Restart services
  # ...
  exit 0
}

sync() (  
  cd "$dir"

  local status; status=$(git status --porcelain)
  local message="$status"
  while getopts "m:" arg; do    
    case "$arg" in
      m) message="$OPTARG" ;;
      *) usage ;;
    esac
    shift $((OPTIND-1))
  done    

  info "Pulling notes..."
  git pull --rebase --autostash -q    

  if [ ${#status} -ne 0 ] ; then
    git add --all    
    git commit -m "$message" 

    echo "$status" | while read -r file ; do
      info "Updating: $file"
    done
    
    git push -q
  fi
)

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  trap cleanup EXIT

  if (( ! $# )) ; then usage; fi

  cmd="${1:-}"
  shift

  case "$cmd" in
    s|sync) sync "$@" ;;    
    *) usage ;;
  esac
fi
